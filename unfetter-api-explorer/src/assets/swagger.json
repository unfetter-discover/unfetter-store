{
  "swagger": "2.0",
  "host": "localhost:3200",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "info": {
    "version": "0.0.2",
    "title": "Unfetter Discover API",
    "description": "Unfetter Discover API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": [
    "application/vnd.api+json",
    "application/json"
  ],
  "produces": [
    "application/vnd.api+json",
    "application/json"
  ],
  "paths": {
    "/attack-patterns": {
      "x-swagger-router-controller": "attack_patterns",
      "get": {
        "tags": [
          "STIX-Attack Pattern"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "get",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"name\": \"AppInit DLLs\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"name\": \"1\" } or { \"name\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          },
          {
            "name": "project",
            "in": "query",
            "description": "Ex: { \"name\": 1 } or { \"name\": 0}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AttackPatternsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "post": {
        "tags": [
          "STIX-Attack Pattern"
        ],
        "description": "Create a new instance of the model and persist it into the data source.",
        "operationId": "add",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttackPatternCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/AttackPatternsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/attack-patterns/{id}": {
      "x-swagger-router-controller": "attack_patterns",
      "get": {
        "tags": [
          "STIX-Attack Pattern"
        ],
        "description": "Find a model instance by {{id}} from the data source.",
        "operationId": "getById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AttackPatternsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Attack Pattern"
        ],
        "description": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "update",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttackPatternCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AttackPatternsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "STIX-Attack Pattern"
        ],
        "description": "Delete a model instance by {{id}} from the data source.",
        "operationId": "deleteById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixDelete"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/campaigns": {
      "x-swagger-router-controller": "campaigns",
      "get": {
        "tags": [
          "STIX-Campaign"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "get",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"name\": \"Green Group Attacks Against Finance\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"name\": \"1\" } or { \"name\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          },
          {
            "name": "project",
            "in": "query",
            "description": "Ex: { \"name\": 1 } or { \"name\": 0}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CampaignsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "post": {
        "tags": [
          "STIX-Campaign"
        ],
        "description": "Create a new instance of the model and persist it into the data source.",
        "operationId": "add",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CampaignCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CampaignsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/campaigns/{id}": {
      "x-swagger-router-controller": "campaigns",
      "get": {
        "tags": [
          "STIX-Campaign"
        ],
        "description": "Find a model instance by {{id}} from the data source.",
        "operationId": "getById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CampaignJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Campaign"
        ],
        "description": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "update",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CampaignCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CampaignJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "STIX-Campaign"
        ],
        "description": "Delete a model instance by {{id}} from the data source.",
        "operationId": "deleteById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixDelete"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/course-of-actions": {
      "x-swagger-router-controller": "course_of_actions",
      "get": {
        "tags": [
          "STIX-Course of Action"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "get",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"name\": \"Add TCP port 80 Filter Rule\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"name\": \"1\" } or { \"name\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          },
          {
            "name": "project",
            "in": "query",
            "description": "Ex: { \"name\": 1 } or { \"name\": 0}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CourseOfActionsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "post": {
        "tags": [
          "STIX-Course of Action"
        ],
        "description": "Create a new instance of the model and persist it into the data source.",
        "operationId": "add",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CourseOfActionCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/CourseOfActionsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/course-of-actions/{id}": {
      "x-swagger-router-controller": "course_of_actions",
      "get": {
        "tags": [
          "STIX-Course of Action"
        ],
        "description": "Find a model instance by {{id}} from the data source.",
        "operationId": "getById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CourseOfActionsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Course of Action"
        ],
        "description": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "update",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CourseOfActionCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CourseOfActionsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "STIX-Course of Action"
        ],
        "description": "Delete a model instance by {{id}} from the data source.",
        "operationId": "deleteById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixDelete"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/identities": {
      "x-swagger-router-controller": "identities",
      "get": {
        "tags": [
          "STIX-Identity"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "get",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"name\": \"John Smith\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"name\": \"1\" } or { \"name\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          },
          {
            "name": "project",
            "in": "query",
            "description": "Ex: { \"name\": 1 } or { \"name\": 0}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdentityJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "post": {
        "tags": [
          "STIX-Identity"
        ],
        "description": "Create a new instance of the model and persist it into the data source.",
        "operationId": "add",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentityCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/IdentitiesJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/identities/{id}": {
      "x-swagger-router-controller": "identities",
      "get": {
        "tags": [
          "STIX-Identity"
        ],
        "description": "Find a model instance by {{id}} from the data source.",
        "operationId": "getById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdentitiesJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Identity"
        ],
        "description": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "update",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IdentityCreateUpdate"
            }
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IdentitiesJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "STIX-Identity"
        ],
        "description": "Delete a model instance by {{id}} from the data source.",
        "operationId": "deleteById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixDelete"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/indicators": {
      "x-swagger-router-controller": "indicators",
      "get": {
        "tags": [
          "STIX-Indicators"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "get",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"name\": \"Poison Ivy Malware\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"name\": \"1\" } or { \"name\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          },
          {
            "name": "project",
            "in": "query",
            "description": "Ex: { \"name\": 1 } or { \"name\": 0}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IndicatorsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "post": {
        "tags": [
          "STIX-Indicators"
        ],
        "description": "Create a new instance of the model and persist it into the data source.",
        "operationId": "add",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndicatorCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/IndicatorsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/indicators/attack-patterns-by-indicator": {
      "x-swagger-router-controller": "indicators",
      "get": {
        "tags": [
          "STIX-Indicators"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "attackPatternsByIndicator",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"name\": \"Cryptolocker\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"name\": \"1\" } or { \"name\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/indicators/{id}": {
      "x-swagger-router-controller": "indicators",
      "get": {
        "tags": [
          "STIX-Indicators"
        ],
        "description": "Find a model instance by {{id}} from the data source.",
        "operationId": "getById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IndicatorsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Indicators"
        ],
        "description": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "update",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IndicatorCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IndicatorsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "STIX-Indicators"
        ],
        "description": "Delete a model instance by {{id}} from the data source.",
        "operationId": "deleteById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixDelete"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/intrusion-sets": {
      "x-swagger-router-controller": "intrusion_sets",
      "get": {
        "tags": [
          "STIX-Intrusion Set"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "get",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"name\": \"Bobcat Breakin\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"name\": \"1\" } or { \"name\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          },
          {
            "name": "project",
            "in": "query",
            "description": "Ex: { \"name\": 1 } or { \"name\": 0}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IntrusionSetsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "post": {
        "tags": [
          "STIX-Intrusion Set"
        ],
        "description": "Create a new instance of the model and persist it into the data source.",
        "operationId": "add",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntrusionSetCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/IntrusionSetsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/intrusion-sets/{id}": {
      "x-swagger-router-controller": "intrusion_sets",
      "get": {
        "tags": [
          "STIX-Intrusion Set"
        ],
        "description": "Find a model instance by {{id}} from the data source.",
        "operationId": "getById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IntrusionSetsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Intrusion Set"
        ],
        "description": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "update",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntrusionSetCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IntrusionSetsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "STIX-Intrusion Set"
        ],
        "description": "Delete a model instance by {{id}} from the data source.",
        "operationId": "deleteById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixDelete"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/malwares": {
      "x-swagger-router-controller": "malwares",
      "get": {
        "tags": [
          "STIX-Malware"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "get",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"name\": \"Cryptolocker\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"name\": \"1\" } or { \"name\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          },
          {
            "name": "project",
            "in": "query",
            "description": "Ex: { \"name\": 1 } or { \"name\": 0}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MalwaresJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "post": {
        "tags": [
          "STIX-Malware"
        ],
        "description": "Create a new instance of the model and persist it into the data source.",
        "operationId": "add",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MalwareCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/MalwaresJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/malwares/{id}": {
      "x-swagger-router-controller": "malwares",
      "get": {
        "tags": [
          "STIX-Malware"
        ],
        "description": "Find a model instance by {{id}} from the data source.",
        "operationId": "getById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MalwaresJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Malware"
        ],
        "description": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "update",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MalwareCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MalwaresJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "STIX-Malware"
        ],
        "description": "Delete a model instance by {{id}} from the data source.",
        "operationId": "deleteById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixDelete"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/marking-definitions": {
      "x-swagger-router-controller": "marking_definitions",
      "get": {
        "tags": [
          "STIX-Marking Definition"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "get",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"definition_type\": \"statement\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"definition_type\": \"1\" } or { \"definition_type\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          },
          {
            "name": "project",
            "in": "query",
            "description": "Ex: { \"name\": 1 } or { \"name\": 0}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MarkingDefinitionsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "post": {
        "tags": [
          "STIX-Marking Definition"
        ],
        "description": "Create a new instance of the model and persist it into the data source.",
        "operationId": "add",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MarkingDefinitionCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/MarkingDefinitionsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/marking-definitions/{id}": {
      "x-swagger-router-controller": "marking_definitions",
      "get": {
        "tags": [
          "STIX-Marking Definition"
        ],
        "description": "Find a model instance by {{id}} from the data source.",
        "operationId": "getById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MarkingDefinitionsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Marking Definition"
        ],
        "description": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "update",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MalwareCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MarkingDefinitionsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "STIX-Marking Definition"
        ],
        "description": "Delete a model instance by {{id}} from the data source.",
        "operationId": "deleteById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixDelete"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/observed-data": {
      "x-swagger-router-controller": "observed_data",
      "get": {
        "tags": [
          "STIX-Observed Data"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "get",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"number_observed\": 50 }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"number_observed\": \"1\" } or { \"number_observed\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          },
          {
            "name": "project",
            "in": "query",
            "description": "Ex: { \"name\": 1 } or { \"name\": 0}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ObservedDatasJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "post": {
        "tags": [
          "STIX-Observed Data"
        ],
        "description": "Create a new instance of the model and persist it into the data source.",
        "operationId": "add",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObservedDataCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ObservedDatasJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/observed-data/{id}": {
      "x-swagger-router-controller": "observed_data",
      "get": {
        "tags": [
          "STIX-Observed Data"
        ],
        "description": "Find a model instance by {{id}} from the data source.",
        "operationId": "getById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ObservedDatasJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Observed Data"
        ],
        "description": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "update",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ObservedDataCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ObservedDatasJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "STIX-Observed Data"
        ],
        "description": "Delete a model instance by {{id}} from the data source.",
        "operationId": "deleteById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixDelete"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/relationships": {
      "x-swagger-router-controller": "relationships",
      "get": {
        "tags": [
          "STIX-Relationship"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "get",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"relationship_type\": \"indicates\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"relationship_type\": \"1\" } or { \"relationship_type\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          },
          {
            "name": "project",
            "in": "query",
            "description": "Ex: { \"name\": 1 } or { \"name\": 0}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RelationshipsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "post": {
        "tags": [
          "STIX-Relationship"
        ],
        "description": "Create a new instance of the model and persist it into the data source.",
        "operationId": "add",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelationshipCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/RelationshipsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/relationships/{id}": {
      "x-swagger-router-controller": "relationships",
      "get": {
        "tags": [
          "STIX-Relationship"
        ],
        "description": "Find a model instance by {{id}} from the data source.",
        "operationId": "getById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RelationshipJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Relationship"
        ],
        "description": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "update",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RelationshipCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RelationshipJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "STIX-Relationship"
        ],
        "description": "Delete a model instance by {{id}} from the data source.",
        "operationId": "deleteById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixDelete"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/reports": {
      "x-swagger-router-controller": "reports",
      "get": {
        "tags": [
          "STIX-Report"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "get",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"name\": \"The Black Vine Cyberespionage Group\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"name\": \"1\" } or { \"name\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          },
          {
            "name": "project",
            "in": "query",
            "description": "Ex: { \"name\": 1 } or { \"name\": 0}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReportsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "post": {
        "tags": [
          "STIX-Report"
        ],
        "description": "Create a new instance of the model and persist it into the data source.",
        "operationId": "add",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ReportsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/reports/{id}": {
      "x-swagger-router-controller": "reports",
      "get": {
        "tags": [
          "STIX-Report"
        ],
        "description": "Find a model instance by {{id}} from the data source.",
        "operationId": "getById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReportsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Report"
        ],
        "description": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "update",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ReportsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "STIX-Report"
        ],
        "description": "Delete a model instance by {{id}} from the data source.",
        "operationId": "deleteById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixDelete"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/sightings": {
      "x-swagger-router-controller": "sightings",
      "get": {
        "tags": [
          "STIX-Sighting"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "get",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"name\": \"The Black Vine Cyberespionage Group\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"name\": \"1\" } or { \"name\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          },
          {
            "name": "project",
            "in": "query",
            "description": "Ex: { \"name\": 1 } or { \"name\": 0}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SightingsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "post": {
        "tags": [
          "STIX-Sighting"
        ],
        "description": "Create a new instance of the model and persist it into the data source.",
        "operationId": "add",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SightingCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/SightingsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/sightings/{id}": {
      "x-swagger-router-controller": "sightings",
      "get": {
        "tags": [
          "STIX-Sighting"
        ],
        "description": "Find a model instance by {{id}} from the data source.",
        "operationId": "getById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SightingsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Sighting"
        ],
        "description": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "update",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SightingCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SightingsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "STIX-Sighting"
        ],
        "description": "Delete a model instance by {{id}} from the data source.",
        "operationId": "deleteById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixDelete"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/threat-actors": {
      "x-swagger-router-controller": "threat_actors",
      "get": {
        "tags": [
          "STIX-Threat Actor"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "get",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"name\": \"The Black Vine Cyberespionage Group\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"name\": \"1\" } or { \"name\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          },
          {
            "name": "project",
            "in": "query",
            "description": "Ex: { \"name\": 1 } or { \"name\": 0}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ThreatActorsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "post": {
        "tags": [
          "STIX-Threat Actor"
        ],
        "description": "Create a new instance of the model and persist it into the data source.",
        "operationId": "add",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThreatActorCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ThreatActorsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/threat-actors/{id}": {
      "x-swagger-router-controller": "threat_actors",
      "get": {
        "tags": [
          "STIX-Threat Actor"
        ],
        "description": "Find a model instance by {{id}} from the data source.",
        "operationId": "getById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ThreatActorsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Threat Actor"
        ],
        "description": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "update",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ThreatActorCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ThreatActorsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "STIX-Threat Actor"
        ],
        "description": "Delete a model instance by {{id}} from the data source.",
        "operationId": "deleteById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixDelete"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/tools": {
      "x-swagger-router-controller": "tools",
      "get": {
        "tags": [
          "STIX-Tools"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "get",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"name\": \"The Black Vine Cyberespionage Group\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"name\": \"1\" } or { \"name\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          },
          {
            "name": "project",
            "in": "query",
            "description": "Ex: { \"name\": 1 } or { \"name\": 0}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ToolsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "post": {
        "tags": [
          "STIX-Tools"
        ],
        "description": "Create a new instance of the model and persist it into the data source.",
        "operationId": "add",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToolCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ToolsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/tools/{id}": {
      "x-swagger-router-controller": "tools",
      "get": {
        "tags": [
          "STIX-Tools"
        ],
        "description": "Find a model instance by {{id}} from the data source.",
        "operationId": "getById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ToolsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Tools"
        ],
        "description": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "update",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToolCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ToolsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "STIX-Tools"
        ],
        "description": "Delete a model instance by {{id}} from the data source.",
        "operationId": "deleteById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixDelete"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/multiples": {
      "x-swagger-router-controller": "multiples",
      "get": {
        "tags": [
          "STIX-Multiple"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "get",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"name\": \"Cryptolocker\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"name\": \"1\" } or { \"name\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          },
          {
            "name": "project",
            "in": "query",
            "description": "Ex: { \"name\": 1 } or { \"name\": 0}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MultiplesJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/multiples/{id}/comment": {
      "x-swagger-router-controller": "multiples",
      "patch": {
        "tags": [
          "STIX-Multiples"
        ],
        "description": "Ability to add comment to an existing STIX object",
        "operationId": "addComment",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/multiples/{id}/like": {
      "x-swagger-router-controller": "multiples",
      "get": {
        "tags": [
          "STIX-Multiples"
        ],
        "description": "Ability to add a like to an existing STIX object",
        "operationId": "addLike",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/multiples/{id}/unlike": {
      "x-swagger-router-controller": "multiples",
      "get": {
        "tags": [
          "STIX-Multiples"
        ],
        "description": "Ability to remove a like from an existing STIX object",
        "operationId": "removeLike",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/multiples/{id}/interaction": {
      "x-swagger-router-controller": "multiples",
      "get": {
        "tags": [
          "STIX-Multiples"
        ],
        "description": "Ability to add an interaction to an existing STIX object",
        "operationId": "addInteraction",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/multiples/{id}/label": {
      "x-swagger-router-controller": "multiples",
      "patch": {
        "tags": [
          "STIX-Multiples"
        ],
        "description": "Ability to add label to an existing STIX object",
        "operationId": "addLabel",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/x-unfetter-assessments/": {
      "x-swagger-router-controller": "x_unfetter_assessments",
      "get": {
        "tags": [
          "STIX-Unfetter Assessment"
        ],
        "description": "Returns the details of an assessment report",
        "operationId": "get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"name\": \"AppInit DLLs\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"name\": \"1\" } or { \"name\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          },
          {
            "name": "project",
            "in": "query",
            "description": "Ex: { \"name\": 1 } or { \"name\": 0}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssessmentsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "post": {
        "tags": [
          "STIX-Unfetter Assessment"
        ],
        "description": "Create a new instance of an Assessment",
        "operationId": "add",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssessmentCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssessmentsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/x-unfetter-assessments/{id}": {
      "x-swagger-router-controller": "x_unfetter_assessments",
      "get": {
        "tags": [
          "STIX-Unfetter Assessment"
        ],
        "description": "Returns the details of an assessment report",
        "operationId": "getById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model ID",
            "type": "string",
            "required": true
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssessmentJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Unfetter Assessment"
        ],
        "description": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "update",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssessmentCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssessmentJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "STIX-Unfetter Assessment"
        ],
        "description": "Delete a model instance by {{id}} from the data source.",
        "operationId": "deleteById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixDelete"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/x-unfetter-assessments/{id}/assessed-objects": {
      "x-swagger-router-controller": "x_unfetter_assessments",
      "get": {
        "tags": [
          "STIX-Unfetter Assessment",
          "Dashboard-Unfetter Assessment"
        ],
        "description": "Returns the details of an assessment report",
        "operationId": "assessedObjects",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model ID",
            "type": "string",
            "required": true,
            "format": "JSON"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssessmentsAssessedObjects"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      }
    },
    "/x-unfetter-assessments/{id}/risk": {
      "x-swagger-router-controller": "x_unfetter_assessments",
      "get": {
        "tags": [
          "STIX-Unfetter Assessment",
          "Dashboard-Unfetter Assessment"
        ],
        "description": "Returns the details of an assessment report",
        "operationId": "risk",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model ID",
            "type": "string",
            "required": true,
            "format": "JSON"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AssessmentRisk"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      }
    },
    "/x-unfetter-assessments/{id}/risk-per-kill-chain": {
      "x-swagger-router-controller": "x_unfetter_assessments",
      "get": {
        "tags": [
          "STIX-Unfetter Assessment",
          "Dashboard-Unfetter Assessment"
        ],
        "description": "Returns the details of an assessment report",
        "operationId": "riskPerKillChain",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model ID",
            "type": "string",
            "required": true,
            "format": "JSON"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RiskPerKillChain"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      }
    },
    "/x-unfetter-assessments/{id}/risk-by-attack-pattern": {
      "x-swagger-router-controller": "x_unfetter_assessments",
      "get": {
        "tags": [
          "STIX-Unfetter Assessment",
          "Dashboard-Unfetter Assessment"
        ],
        "description": "Returns the details of an assessment report",
        "operationId": "riskByAttackPatternAndKillChain",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model ID",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      }
    },
    "/x-unfetter-assessments/{id}/summary-aggregations": {
      "x-swagger-router-controller": "x_unfetter_assessments",
      "get": {
        "tags": [
          "STIX-Unfetter Assessment",
          "Dashboard-Unfetter Assessment"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "summaryAggregations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model ID",
            "type": "string",
            "required": true,
            "format": "JSON"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      }
    },
    "/x-unfetter-assessments/{id}/assessed-object-risk/{objectId}": {
      "x-swagger-router-controller": "x_unfetter_assessments",
      "get": {
        "tags": [
          "STIX-Unfetter Assessment"
        ],
        "description": "Returns the assessment risk for a particular assessed object",
        "operationId": "getRiskByAssessedObject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model ID",
            "type": "string",
            "required": true
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Model ID",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Risk"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      }
    },
    "/x-unfetter-assessments/{id}/assessed-object-answer/{objectId}/{question}": {
      "x-swagger-router-controller": "x_unfetter_assessments",
      "get": {
        "tags": [
          "STIX-Unfetter Assessment"
        ],
        "description": "Returns the assessment Questions for a particular assessed object",
        "operationId": "getAnswerByAssessedObject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Assessment Id",
            "type": "string",
            "required": true
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "ID of the assessed object",
            "type": "string",
            "required": true
          },
          {
            "name": "question",
            "in": "path",
            "description": "The question idb",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Answer"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Unfetter Assessment"
        ],
        "description": "For a given assessment and assessed object, change all the answers to questions to the inputed value",
        "operationId": "updateAnswerByAssessedObject",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Assessed Object ID",
            "type": "string",
            "required": true
          },
          {
            "name": "question",
            "in": "path",
            "description": "The question idb",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "The new answers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnswerIndexJsonApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/x-unfetter-assessments/latest/{creatorId}": {
      "x-swagger-router-controller": "x_unfetter_assessments",
      "get": {
        "tags": [
          "STIX-Unfetter Assessment",
          "Dashboard-Unfetter Assessment"
        ],
        "description": "Find all instances of assessments from creator, sorted by last modified",
        "operationId": "latestAssessmentsByCreatorId",
        "parameters": [
          {
            "name": "creatorId",
            "in": "path",
            "description": "creator id",
            "type": "string",
            "required": true,
            "format": "JSON"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      }
    },
    "/x-unfetter-assessments/latest": {
      "x-swagger-router-controller": "x_unfetter_assessments",
      "get": {
        "tags": [
          "STIX-Unfetter Assessment",
          "Dashboard-Unfetter Assessment"
        ],
        "description": "Find all instances of assessments, sorted by last modified",
        "operationId": "latestAssessments",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      }
    },
    "/x-unfetter-assessments/{id}/assessed-object-answer/{objectId}": {
      "x-swagger-router-controller": "x_unfetter_assessments",
      "get": {
        "tags": [
          "STIX-Unfetter Assessment"
        ],
        "description": "Returns the assessment Questions for a particular assessed object",
        "operationId": "getAnswerByAssessedObject",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Assessment Id",
            "type": "string",
            "required": true
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "ID of the assessed object",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Answer"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Unfetter Assessment"
        ],
        "description": "For a given assessment and assessed object, change all the answers to questions to the inputed value",
        "operationId": "updateAnswerByAssessedObject",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "objectId",
            "in": "path",
            "description": "Assessed Object ID",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "body",
            "description": "The array index of the answer to select",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnswerIndexJsonApi"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/x-unfetter-sensors": {
      "x-swagger-router-controller": "x_unfetter_sensors",
      "get": {
        "tags": [
          "STIX-Unfetter Sensor"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "get",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"name\": \"The Black Vine Cyberespionage Group\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"name\": \"1\" } or { \"name\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          },
          {
            "name": "project",
            "in": "query",
            "description": "Ex: { \"name\": 1 } or { \"name\": 0}",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/XUnfetterSensorsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "post": {
        "tags": [
          "STIX-Unfetter Sensor"
        ],
        "description": "Create a new instance of the model and persist it into the data source.",
        "operationId": "add",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/XUnfetterSensorCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/XUnfetterSensorsJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/x-unfetter-sensors/{id}": {
      "x-swagger-router-controller": "x_unfetter_sensors",
      "get": {
        "tags": [
          "STIX-Unfetter Sensor"
        ],
        "description": "Find a model instance by {{id}} from the data source.",
        "operationId": "getById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          },
          {
            "name": "metaproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended meta properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/XUnfetterSensorsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "STIX-Unfetter Sensor"
        ],
        "description": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "update",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/XUnfetterSensorCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/XUnfetterSensorsJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "STIX-Unfetter Sensor"
        ],
        "description": "Delete a model instance by {{id}} from the data source.",
        "operationId": "deleteById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixDelete"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/ctf/upload": {
      "x-swagger-router-controller": "ctf_upload",
      "post": {
        "tags": [
          "CTF Uploads"
        ],
        "description": "Uploads a ctf file.",
        "operationId": "upload",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "upfile",
            "type": "file",
            "description": "The file to upload."
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JsonSchema"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      }
    },
    "/ctf/translate/report/url": {
      "x-swagger-router-controller": "translate_url",
      "post": {
        "tags": [
          "CTF translate url"
        ],
        "description": "translates generic url",
        "operationId": "translateUrl",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonSchemaObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JsonSchemaObject"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      }
    },
    "/ctf/translate/report/data": {
      "x-swagger-router-controller": "translate_data",
      "post": {
        "tags": [
          "CTF translate data"
        ],
        "description": "translates generic report json to a stix report",
        "operationId": "translateData",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JsonSchemaObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JsonSchemaObject"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      }
    },
    "/ctf/translate/report/data/sample": {
      "x-swagger-router-controller": "translate_data",
      "get": {
        "tags": [
          "CTF sample report data in generic format"
        ],
        "description": "sample report in generic format",
        "operationId": "translateDataSample",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/vnd.api+json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/JsonSchemaObject"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      }
    },
    "/dashboards/intrusionSetView": {
      "x-swagger-router-controller": "dashboards",
      "get": {
        "tags": [
          "Dashboards"
        ],
        "description": "Returns the view for displaying the Intrusion Set Dashboard",
        "operationId": "intrusionSetView",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "intrusionSetIds",
            "in": "query",
            "description": "The array of Intrusion Set ids",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DashboardsIntrusionSetViewJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      }
    },
    "/downloadBundle": {
      "x-swagger-router-controller": "downloads",
      "get": {
        "tags": [
          "Downloads"
        ],
        "description": "Returns a \"bundle\" formatted array of STIX objects from the CTI STIX STORE API",
        "operationId": "downloadBundle",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "extendedproperties",
            "in": "query",
            "type": "boolean",
            "description": "boolean to include extended stix properties"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixBundle"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      }
    },
    "/config": {
      "x-swagger-router-controller": "config",
      "get": {
        "tags": [
          "Config"
        ],
        "description": "Find all instances of the model matched by filter from the data source.",
        "operationId": "get",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Ex: { \"name\": \"Cryptolocker\" }",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Ex: { \"name\": \"1\" } or { \"name\": \"-1\"}",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Ex: 5",
            "required": false,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Ex: 10",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConfigJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Config"
        ],
        "description": "Create a new instance of the model and persist it into the data source.",
        "operationId": "add",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "Model instance data",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigCreateUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ConfigJsonApi"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    },
    "/config/{id}": {
      "x-swagger-router-controller": "config",
      "get": {
        "tags": [
          "Config"
        ],
        "description": "Find a model instance by {{id}} from the data source.",
        "operationId": "getById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConfigJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/DetailedErrorResponse"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Config"
        ],
        "description": "Patch attributes for a model instance and persist it into the data source.",
        "operationId": "update",
        "produces": [
          "application/vnd.api+json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "body",
            "description": "An object of model property name/value pairs",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigCreateUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ConfigJsonApiSingleItem"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Config"
        ],
        "description": "Delete a model instance by {{id}} from the data source.",
        "operationId": "deleteById",
        "produces": [
          "application/vnd.api+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Model id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/StixDelete"
            }
          },
          "404": {
            "description": "Item Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorJsonApi"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Count": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number"
        }
      }
    },
    "Risk": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number"
        }
      }
    },
    "Delete": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "DetailedErrorResponse": {
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "object"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number"
        },
        "source": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "details": {
          "type": "string"
        }
      }
    },
    "ErrorJsonApi": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "Links": {
      "type": "object",
      "properties": {
        "self": {
          "type": "string"
        }
      }
    },
    "NotFound": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "ExternalReference": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string"
        },
        "source_name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "GranularMarking": {
      "type": "object",
      "properties": {
        "marking_ref": {
          "type": "string"
        },
        "selectors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "KillChainPhase": {
      "type": "object",
      "properties": {
        "kill_chain_name": {
          "type": "string"
        },
        "phase_name": {
          "type": "string"
        }
      }
    },
    "Answer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "risk": {
          "type": "number"
        }
      }
    },
    "AnswerIndexJsonApi": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "attributes": {
              "type": "object",
              "properties": {
                "answer": {
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "Question": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "risk": {
          "type": "number"
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionOption"
          }
        },
        "selected_option": {
          "type": "number"
        }
      }
    },
    "QuestionOption": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "value": {
          "type": "number"
        }
      }
    },
    "StixBundle": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "spec_version": {
          "type": "string"
        },
        "objects": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "StixCommon": {
      "type": "object",
      "discriminator": "type",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "created": {
                  "type": "string",
                  "format": "date-time"
                },
                "created_by_ref": {
                  "type": "string",
                  "default": "identity-id"
                },
                "modified": {
                  "type": "string",
                  "format": "date-time"
                },
                "revoked": {
                  "type": "boolean",
                  "default": false
                },
                "labels": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "external_references": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ExternalReference"
                  }
                },
                "object_marking_refs": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "default": "marking-definition-id"
                  }
                },
                "granular_markings": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/GranularMarking"
                  }
                }
              }
            }
          }
        }
      }
    },
    "StixDelete": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Delete"
        }
      }
    },
    "AssessmentsAssessedObjects": {
      "type": "object"
    },
    "AssessmentRisk": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "attackChainAssessment"
        },
        "links": {
          "$ref": "#/definitions/Links"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "created": {
              "type": "string",
              "format": "date-time"
            },
            "description": {
              "type": "string"
            },
            "published": {
              "type": "string",
              "format": "date-time"
            },
            "object_refs": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "external_references": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalReference"
              }
            },
            "granular_markings": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GranularMarking"
              }
            },
            "kill_chain_phases": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/KillChainPhase"
              }
            },
            "labels": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "modified": {
              "type": "string",
              "format": "date-time"
            },
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "version": {
              "type": "integer"
            }
          }
        }
      }
    },
    "riskMeasurements": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "attackChainAssessment"
        },
        "links": {
          "$ref": "#/definitions/Links"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "risk": {
              "type": "number"
            },
            "total": {
              "type": "number"
            }
          }
        }
      }
    },
    "RiskPerKillChain": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "attackChainAssessment"
        },
        "links": {
          "$ref": "#/definitions/Links"
        },
        "attributes": {
          "type": "object",
          "properties": {
            "indicators": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "risk": {
                    "type": "number"
                  },
                  "measurements": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/riskMeasurements"
                    }
                  },
                  "objects": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            },
            "sensors": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "risk": {
                    "type": "number"
                  },
                  "measurements": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/riskMeasurements"
                    }
                  },
                  "objects": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            },
            "courseOfActions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "risk": {
                    "type": "number"
                  },
                  "measurements": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/riskMeasurements"
                    }
                  },
                  "objects": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "AttackPattern": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "kill_chain_phases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KillChainPhase"
          }
        },
        "x_unfetter_sophistication_level": {
          "type": [
            "number",
            "null"
          ]
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "created_by_ref": {
          "type": "string",
          "default": "identity-id"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "revoked": {
          "type": "boolean",
          "default": false
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external_references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "object_marking_refs": {
          "type": "array",
          "items": {
            "type": "string",
            "default": "marking-definition-id"
          }
        },
        "granular_markings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GranularMarking"
          }
        }
      }
    },
    "AttackPatternCreateUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/StixCommon"
        },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "attack-pattern"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "kill_chain_phases": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/KillChainPhase"
                      }
                    },
                    "x_unfetter_sophistication_level": {
                      "type": "number"
                    },
                    "object_marking_refs": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "default": "marking-definition-id"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "AttackPatternJsonApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "attack-pattern"
        },
        "attributes": {
          "$ref": "#/definitions/AttackPattern"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "AttackPatternsJsonApi": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttackPatternJsonApi"
          }
        }
      }
    },
    "AttackPatternsJsonApiSingleItem": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "$ref": "#/definitions/AttackPatternJsonApi"
        }
      }
    },
    "AssessmentJsonApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "x-unfetter-assessment"
        },
        "attributes": {
          "$ref": "#/definitions/Assessment"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "AssessmentsJsonApi": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssessmentJsonApi"
          }
        }
      }
    },
    "AssessmentCreateUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/StixCommon"
        },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "x-unfetter-assessment"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "kill_chain_phases": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/KillChainPhase"
                      }
                    },
                    "assessment_objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "risk": {
                            "type": "number"
                          },
                          "stix": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "questions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "selected_value": {
                                  "type": "object",
                                  "properties": {
                                    "risk": {
                                      "type": "number"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "risk": {
                                        "type": "number"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "risk": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "labels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "modified": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "name": {
                      "type": "string"
                    },
                    "risk": {
                      "type": "number"
                    },
                    "risk_by_question": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "AssessmentJsonApiSingleItem": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "$ref": "#/definitions/AssessmentJsonApi"
        }
      }
    },
    "Assessment": {
      "allOf": [
        {
          "$ref": "#/definitions/StixCommon"
        },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "x-unfetter-assessment"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "assessment_objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "risk": {
                            "type": "number"
                          },
                          "stix": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "questions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "selected_value": {
                                  "type": "object",
                                  "properties": {
                                    "risk": {
                                      "type": "number"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "risk": {
                                        "type": "number"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "risk": {
                                  "type": "number"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "CampaignJsonApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "campaign"
        },
        "attributes": {
          "$ref": "#/definitions/Campaign"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "CampaignsJsonApi": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CampaignJsonApi"
          }
        }
      }
    },
    "CampaignCreateUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/StixCommon"
        },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "campaign"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "labels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "aliases": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "first_seen": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "last_seen": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "objective": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "CampaignJsonApiSingleItem": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "$ref": "#/definitions/CampaignJsonApi"
        }
      }
    },
    "Campaign": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "aliases": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "first_seen": {
          "type": "string",
          "format": "date-time"
        },
        "last_seen": {
          "type": "string",
          "format": "date-time"
        },
        "objective": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "created_by_ref": {
          "type": "string",
          "default": "identity-id"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "revoked": {
          "type": "boolean",
          "default": false
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external_references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "object_marking_refs": {
          "type": "array",
          "items": {
            "type": "string",
            "default": "marking-definition-id"
          }
        },
        "granular_markings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GranularMarking"
          }
        }
      }
    },
    "CourseOfActionJsonApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "course-of-action"
        },
        "attributes": {
          "$ref": "#/definitions/CourseOfAction"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "CourseOfActionsJsonApi": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CourseOfAction"
          }
        }
      }
    },
    "CourseOfActionCreateUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/StixCommon"
        },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "course-of-action"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "action": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "CourseOfActionsJsonApiSingleItem": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "$ref": "#/definitions/CourseOfActionJsonApi"
        }
      }
    },
    "CourseOfAction": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "created_by_ref": {
          "type": "string",
          "default": "identity-id"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "revoked": {
          "type": "boolean",
          "default": false
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external_references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "object_marking_refs": {
          "type": "array",
          "items": {
            "type": "string",
            "default": "marking-definition-id"
          }
        },
        "granular_markings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GranularMarking"
          }
        }
      }
    },
    "IdentityJsonApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "identity"
        },
        "attributes": {
          "$ref": "#/definitions/Identity"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "IdentitiesJsonApi": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentityJsonApi"
          }
        }
      }
    },
    "IdentityCreateUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/StixCommon"
        },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "identity"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "labels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "identity_class": {
                      "type": "string"
                    },
                    "sectors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contact_information": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "IdentitiesJsonApiSingleItem": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "$ref": "#/definitions/IdentityJsonApi"
        }
      }
    },
    "Identity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "identity_class": {
          "type": "string"
        },
        "sectors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "contact_information": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "created_by_ref": {
          "type": "string",
          "default": "identity-id"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "revoked": {
          "type": "boolean",
          "default": false
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external_references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "object_marking_refs": {
          "type": "array",
          "items": {
            "type": "string",
            "default": "marking-definition-id"
          }
        },
        "granular_markings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GranularMarking"
          }
        }
      }
    },
    "IndicatorJsonApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "indicator"
        },
        "attributes": {
          "$ref": "#/definitions/Indicator"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "IndicatorsJsonApi": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IndicatorJsonApi"
          }
        }
      }
    },
    "IndicatorCreateUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/StixCommon"
        },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "indicator"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "pattern": {
                      "type": "string"
                    },
                    "valid_from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "valid_until": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "kill_chain_phases": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/KillChainPhase"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "IndicatorsJsonApiSingleItem": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "$ref": "#/definitions/IndicatorJsonApi"
        }
      }
    },
    "Indicator": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "pattern": {
          "type": "string"
        },
        "valid_from": {
          "type": "string",
          "format": "date-time"
        },
        "valid_until": {
          "type": "string",
          "format": "date-time"
        },
        "kill_chain_phases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KillChainPhase"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "created_by_ref": {
          "type": "string",
          "default": "identity-id"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "revoked": {
          "type": "boolean",
          "default": false
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external_references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "object_marking_refs": {
          "type": "array",
          "items": {
            "type": "string",
            "default": "marking-definition-id"
          }
        },
        "granular_markings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GranularMarking"
          }
        }
      }
    },
    "IntrusionSetJsonApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "intrusion-set"
        },
        "attributes": {
          "$ref": "#/definitions/IntrusionSet"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "IntrusionSetsJsonApi": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntrusionSetJsonApi"
          }
        }
      }
    },
    "IntrusionSetCreateUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/StixCommon"
        },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "intrusion-set"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "first_seen": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "last_seen": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "aliases": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "goals": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "resource_level": {
                      "type": "string"
                    },
                    "primary_motivation": {
                      "type": "string"
                    },
                    "secondary_motivations": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "IntrusionSetsJsonApiSingleItem": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "$ref": "#/definitions/IntrusionSetJsonApi"
        }
      }
    },
    "IntrusionSet": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "alias": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "first_seen": {
          "type": "string",
          "format": "date-time"
        },
        "last_seen": {
          "type": "string",
          "format": "date-time"
        },
        "goals": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "primary_motivation": {
          "type": "string"
        },
        "secondary_motivations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resource_level": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "created_by_ref": {
          "type": "string",
          "default": "identity-id"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "revoked": {
          "type": "boolean",
          "default": false
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external_references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "object_marking_refs": {
          "type": "array",
          "items": {
            "type": "string",
            "default": "marking-definition-id"
          }
        },
        "granular_markings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GranularMarking"
          }
        }
      }
    },
    "MalwareJsonApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "malware"
        },
        "attributes": {
          "$ref": "#/definitions/Malware"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "MalwaresJsonApi": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MalwareJsonApi"
          }
        }
      }
    },
    "MalwareCreateUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/StixCommon"
        },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "malware"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "kill_chain_phases": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/KillChainPhase"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "MalwaresJsonApiSingleItem": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "$ref": "#/definitions/MalwareJsonApi"
        }
      }
    },
    "Malware": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "kill_chain_phases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KillChainPhase"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "created_by_ref": {
          "type": "string",
          "default": "identity-id"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "revoked": {
          "type": "boolean",
          "default": false
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external_references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "object_marking_refs": {
          "type": "array",
          "items": {
            "type": "string",
            "default": "marking-definition-id"
          }
        },
        "granular_markings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GranularMarking"
          }
        }
      }
    },
    "MarkingDefinitionJsonApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "marking-defininition"
        },
        "attributes": {
          "$ref": "#/definitions/MarkingDefinition"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "MarkingDefinitionsJsonApi": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MarkingDefinitionJsonApi"
          }
        }
      }
    },
    "MarkingDefinitionCreateUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/StixCommon"
        },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "marking-definition"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "definition_type": {
                      "type": "string"
                    },
                    "definition": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "MarkingDefinitionsJsonApiSingleItem": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "$ref": "#/definitions/MarkingDefinitionJsonApi"
        }
      }
    },
    "MarkingDefinition": {
      "type": "object",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "created_by_ref": {
          "type": "string",
          "default": "identity-id"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "revoked": {
          "type": "boolean",
          "default": false
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external_references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "object_marking_refs": {
          "type": "array",
          "items": {
            "type": "string",
            "default": "marking-definition-id"
          }
        },
        "granular_markings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GranularMarking"
          }
        }
      }
    },
    "MultipleJsonApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "attributes": {
          "type": "object"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "MultiplesJsonApi": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultipleJsonApi"
          }
        }
      }
    },
    "ObservedDataJsonApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "observed-data"
        },
        "attributes": {
          "$ref": "#/definitions/ObservedData"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "ObservedDatasJsonApi": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObservedDataJsonApi"
          }
        }
      }
    },
    "ObservedDataCreateUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/StixCommon"
        },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "observed-data"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "first_observed": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "last_observed": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "number_observed": {
                      "type": "number"
                    },
                    "objects": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "ObservedDatasJsonApiSingleItem": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "$ref": "#/definitions/ObservedDataJsonApi"
        }
      }
    },
    "ObservedData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "first_observed": {
          "type": "string",
          "format": "date-time"
        },
        "last_observed": {
          "type": "string",
          "format": "date-time"
        },
        "number_observed": {
          "type": "integer"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "created_by_ref": {
          "type": "string",
          "default": "identity-id"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "revoked": {
          "type": "boolean",
          "default": false
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external_references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "object_marking_refs": {
          "type": "array",
          "items": {
            "type": "string",
            "default": "marking-definition-id"
          }
        },
        "granular_markings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GranularMarking"
          }
        }
      }
    },
    "RelationshipJsonApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "relationship"
        },
        "attributes": {
          "$ref": "#/definitions/Relationship"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "RelationshipsJsonApi": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelationshipJsonApi"
          }
        }
      }
    },
    "RelationshipCreateUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/StixCommon"
        },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "relationship"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "relationship_type": {
                      "type": "string"
                    },
                    "source_ref": {
                      "type": "string"
                    },
                    "target_ref": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "RelationshipJsonApiSingleItem": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "$ref": "#/definitions/RelationshipJsonApi"
        }
      }
    },
    "Relationship": {
      "type": "object",
      "properties": {
        "relationship_type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "source_ref": {
          "type": "string"
        },
        "target_ref": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "created_by_ref": {
          "type": "string",
          "default": "identity-id"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "revoked": {
          "type": "boolean",
          "default": false
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external_references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "object_marking_refs": {
          "type": "array",
          "items": {
            "type": "string",
            "default": "marking-definition-id"
          }
        },
        "granular_markings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GranularMarking"
          }
        }
      }
    },
    "ReportJsonApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "report"
        },
        "attributes": {
          "$ref": "#/definitions/ReportData"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "ReportsJsonApi": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportJsonApi"
          }
        }
      }
    },
    "ReportCreateUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/StixCommon"
        },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "report"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "published": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "object_refs": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "ReportsJsonApiSingleItem": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "$ref": "#/definitions/ReportJsonApi"
        }
      }
    },
    "ReportData": {
      "type": "object",
      "properties": {
        "attributes": {
          "$ref": "#/definitions/Report"
        },
        "id": {
          "type": "string"
        },
        "links": {
          "$ref": "#/definitions/Links"
        },
        "type": {
          "type": "string",
          "example": "report"
        }
      }
    },
    "Report": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "published": {
          "type": "string",
          "format": "date-time"
        },
        "object_refs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "created_by_ref": {
          "type": "string",
          "default": "identity-id"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "revoked": {
          "type": "boolean",
          "default": false
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external_references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "object_marking_refs": {
          "type": "array",
          "items": {
            "type": "string",
            "default": "marking-definition-id"
          }
        },
        "granular_markings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GranularMarking"
          }
        }
      }
    },
    "SightingJsonApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "sighting"
        },
        "attributes": {
          "$ref": "#/definitions/Sighting"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "SightingsJsonApi": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SightingJsonApi"
          }
        }
      }
    },
    "SightingCreateUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/StixCommon"
        },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "sighting"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "first_seen": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "last_seen": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "count": {
                      "type": "number"
                    },
                    "sighting_of_ref": {
                      "type": "string"
                    },
                    "observed_data_refs": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "SightingsJsonApiSingleItem": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "$ref": "#/definitions/SightingJsonApi"
        }
      }
    },
    "Sighting": {
      "type": "object",
      "properties": {
        "first_seen": {
          "type": "string",
          "format": "date-time"
        },
        "last_seen": {
          "type": "string",
          "format": "date-time"
        },
        "count": {
          "type": "integer"
        },
        "sighting_of_ref": {
          "type": "string"
        },
        "observed_data_refs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "where_sighted_refs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "summary": {
          "type": "boolean"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "created_by_ref": {
          "type": "string",
          "default": "identity-id"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "revoked": {
          "type": "boolean",
          "default": false
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external_references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "object_marking_refs": {
          "type": "array",
          "items": {
            "type": "string",
            "default": "marking-definition-id"
          }
        },
        "granular_markings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GranularMarking"
          }
        }
      }
    },
    "ThreatActorJsonApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "threat-actor"
        },
        "attributes": {
          "$ref": "#/definitions/ThreatActor"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "ThreatActorsJsonApi": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ThreatActorJsonApi"
          }
        }
      }
    },
    "ThreatActorCreateUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/StixCommon"
        },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "threat-actor"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "aliases": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "goals": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "sophisication": {
                      "type": "string"
                    },
                    "resource-level": {
                      "type": "string"
                    },
                    "primary_motivation": {
                      "type": "string"
                    },
                    "secondary_motivations": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "ThreatActorsJsonApiSingleItem": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "$ref": "#/definitions/ThreatActorJsonApi"
        }
      }
    },
    "ThreatActor": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "alias": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "goals": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sophistication": {
          "type": "string"
        },
        "resource_level": {
          "type": "string"
        },
        "primary_motivation": {
          "type": "string"
        },
        "secondary_motivations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "personal_motivations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "created_by_ref": {
          "type": "string",
          "default": "identity-id"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "revoked": {
          "type": "boolean",
          "default": false
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external_references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "object_marking_refs": {
          "type": "array",
          "items": {
            "type": "string",
            "default": "marking-definition-id"
          }
        },
        "granular_markings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GranularMarking"
          }
        }
      }
    },
    "ToolJsonApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "tool"
        },
        "attributes": {
          "$ref": "#/definitions/Tool"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "ToolsJsonApi": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ToolJsonApi"
          }
        }
      }
    },
    "ToolCreateUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/StixCommon"
        },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "tool"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "kill_chain_phases": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/KillChainPhase"
                      }
                    },
                    "tool_version": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "ToolsJsonApiSingleItem": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "$ref": "#/definitions/ToolJsonApi"
        }
      }
    },
    "Tool": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "kill_chain_phases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KillChainPhase"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "created_by_ref": {
          "type": "string",
          "default": "identity-id"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "revoked": {
          "type": "boolean",
          "default": false
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external_references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "object_marking_refs": {
          "type": "array",
          "items": {
            "type": "string",
            "default": "marking-definition-id"
          }
        },
        "granular_markings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GranularMarking"
          }
        }
      }
    },
    "XUnfetterSensorJsonApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "example": "x-unfetter-sensor"
        },
        "attributes": {
          "$ref": "#/definitions/XUnfetterSensor"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "XUnfetterSensorsJsonApi": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/XUnfetterSensorJsonApi"
          }
        }
      }
    },
    "XUnfetterSensorCreateUpdate": {
      "allOf": [
        {
          "$ref": "#/definitions/StixCommon"
        },
        {
          "properties": {
            "data": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "x-unfetter-sensor"
                  ]
                },
                "attributes": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "aliases": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "kill_chain_phases": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/KillChainPhase"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      ]
    },
    "XUnfetterSensorsJsonApiSingleItem": {
      "type": "object",
      "properties": {
        "links": {
          "$ref": "#/definitions/Links"
        },
        "data": {
          "$ref": "#/definitions/XUnfetterSensorJsonApi"
        }
      }
    },
    "XUnfetterSensor": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "kill_chain_phases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KillChainPhase"
          }
        },
        "alias": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "created_by_ref": {
          "type": "string",
          "default": "identity-id"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "revoked": {
          "type": "boolean",
          "default": false
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "external_references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "object_marking_refs": {
          "type": "array",
          "items": {
            "type": "string",
            "default": "marking-definition-id"
          }
        },
        "granular_markings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GranularMarking"
          }
        }
      }
    },
    "DashboardsIntrusionSetViewJsonApi": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        },
        "links": {
          "$ref": "#/definitions/Links"
        }
      }
    },
    "ConfigJsonApi": {
      "type": "object"
    },
    "ConfigCreateUpdate": {
      "type": "object"
    },
    "ConfigJsonApiSingleItem": {
      "type": "object"
    },
    "JsonSchema": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/JsonSchemaObject"
      }
    },
    "JsonSchemaObject": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object"
        }
      }
    }
  }
}
